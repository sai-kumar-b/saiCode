string input = model.Display;
List<string> ArrList = new List<string>();
List<string> ArrList2 = new List<string>();
List<string> ArrList3 = new List<string>();

// Use regex to split the input into numbers and operators
foreach (Match match in Regex.Matches(input, @"\d+(\.\d+)?|[-+*/=]"))
{
    ArrList3.Add(match.Value);
    if (match.Value == "=") ArrList2.Add(match.Value); // Special handling for '='
    else if (Regex.IsMatch(match.Value, @"-?\d+")) ArrList2.Add(match.Value);
    else ArrList.Add(match.Value);
}

int mm = ArrList2.Count;
bool hasDot = ArrList2.Contains(".");

if (Operation == ".")
{
    if (mm > 1 && ArrList2[mm - 1] == "." && ArrList2[mm - 2] == ".")
    {
        ArrList2.RemoveAt(mm - 1);
    }
    else if (mm > 1 && ArrList2[mm - 1] == "." &&
        (ArrList2[mm - 2] == "+" || ArrList2[mm - 2] == "-" || ArrList2[mm - 2] == "*" || ArrList2[mm - 2] == "/"))
    {
        ArrList2.Insert(mm - 1, "0");
    }
}

if (Operation == "=")
{
    if (mm == 1 && (ArrList2[mm - 1] == "=" || Convert.ToInt32(ArrList2[0]) > 0))
    {
        model.Display = $"{ArrList2[0]}=";
    }
    else if (mm == 2 && ArrList2[mm - 1] == "=")
    {
        model.Display = $"{ArrList2[0]}=";
        model.Result = Convert.ToDouble(ArrList2[0]);
    }
    else if (mm > 2 && ArrList2[mm - 1] == "=")
    {
        model.Display = $"{ArrList2[0]}{ArrList2[1]}";
        model.Result = Convert.ToDouble(ArrList2[0]);
    }
}

if (Operation == "." && hasDot)
{
    model.Display = string.Join("", ArrList3);
}

model.Display = string.Join("", ArrList2);
return View("Index", model);

                    if(Operation=="." && ArrList3[arrlen3-1].Contains("."))
                        {
                        model.Display = "";
                        foreach(string e in ArrList3)
                        {
                            model.Display += e;
                            return View("Index", model);
                        }
                    }
                }
